name: HALIF Build Check (develop)

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform:
          - name: "Raspberry Pi"
          - name: "Banana Pi R4"
      fail-fast: false

    name: Build UT for ${{ matrix.platform.name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache APT packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt
          key: ${{ runner.os }}-apt-${{ hashFiles('**/apt-packages') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake git autoconf automake libtool pkg-config

      - name: Configure (headers-only sanity)
        run: |
          autoreconf -fi
          ./configure
          # If there's nothing to build that's fine; just ensure make files are valid.
          make -n || true

      - name: Run unit tests (if UT repo is reachable)
        env:
          UT_PROJECT_VERSION: master
        run: |
          set -e
          TEST_REPO="$(git remote -vv | head -n1 | awk '{print $2}' | sed 's/hal/haltest/g')"
          if git ls-remote -q "$TEST_REPO" &>/dev/null; then
            echo "UT repo found: $TEST_REPO â€” running build_ut.sh"
            chmod +x build_ut.sh
            ./build_ut.sh
          else
            echo "::notice ::UT repo $TEST_REPO not found; skipping unit tests."
          fi
